# -------------------------
#        DEFAULTS
# -------------------------
defaults: &defaults
  working_directory: ~/toolbar-android
  environment:
  - GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1

# LINUX
linux_defaults: &linux_defaults
  <<: *defaults
  docker:
  - image: circleci/node:8
  environment:
  - PATH: "/opt/yarn/yarn-v1.5.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# ANDROID
android_defaults: &android_defaults
  <<: *defaults
  docker:
  - image: circleci/android:api-27-node8-alpha
  resource_class: "medium"
  environment:
  - TERM: "dumb"
  - ADB_INSTALL_TIMEOUT: 10
  - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
  - GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
  - BUILD_THREADS: 2

# MACOS
macos_defaults: &macos_defaults
  <<: *defaults
  resource_class: "medium"
  macos:
    xcode: "10.1.0"

# Example
at-example-61: &at-example-61 
  working_directory: ~/toolbar-android/example/ToolbarAndroidExample-061

# -------------------------
#         ALIASES
# -------------------------

aliases:
# CACHE
- &restore-yarn-cache
  keys:
  - yarn-cache-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
  - yarn-cache-{{ arch }}
- &save-yarn-cache
  paths:
  - ~/.cache/yarn
  - ~/Library/Detox/ios
  key: yarn-cache-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

- &restore-gradle-cache
  keys:
  - gradle-cache-{{ checksum "android/build.gradle" }}-{{ checksum "example/ToolbarAndroidExample-061/android/build.gradle" }}-{{ checksum "example/ToolbarAndroidExample-061/android/app/build.gradle" }}
- &save-gradle-cache
  paths:
  - ~/.gradle
  key: gradle-cache-{{ checksum "android/build.gradle" }}-{{ checksum "example/ToolbarAndroidExample-061/android/build.gradle" }}-{{ checksum "example/ToolbarAndroidExample-061/android/app/build.gradle" }}

# INSTALLATION
- &yarn
  name: Yarn Install
  command: |
    yarn install --network-concurrency 1 --non-interactive --cache-folder ~/.cache/yarn & wait
# ANALYSE
- &eslint
  name: ESLint Checks
  command: yarn test:eslint

- &flow
  name: Flow Checks
  command: yarn test:flow

- &jest
  name: Jest Unit Tests
  command: yarn test:jest

- &tsc
  name: TypeScript Checks
  command: yarn test:tsc


# -------------------------
#          JOBS
# -------------------------
version: 2
jobs:
  # Set up a Linux environment for downstream jobs
  linux-checkout:
    <<: *linux_defaults
    steps:
    - checkout
    - restore-cache: *restore-yarn-cache
    - run: 
        name: Checkout project root
        command: |-
          rm -rf node_modules
          yarn cache clean
    - run: *yarn
    - save-cache: *save-yarn-cache
    - run:
        name: Checkout Example (RN61) 
        command: |-
          cd example/ToolbarAndroidExample-061
          rm -rf node_modules
          yarn cache clean
          yarn sync & wait
          yarn install --network-concurrency 1 --non-interactive --cache-folder ~/.cache/yarn & wait
    - persist_to_workspace:
        root: .
        paths: .

  eslint:
    <<: *linux_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - run: *eslint

  flow:
    <<: *linux_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - run: *flow
  
  jest:
    <<: *linux_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - run: *jest

  tsc:
    <<: *linux_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - run: *tsc


  example-61-android-compile:
    <<: *android_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - restore-cache: *restore-gradle-cache
    - run:
        name: Accept Android licences
        command: |-
          yes | sdkmanager --licenses || exit 0
          yes | sdkmanager --update || exit 0
    - run:
        name: Build Android Example App (RN61)
        command: |-
          cd example/ToolbarAndroidExample-061/android
          ./gradlew clean assembleDebug
    - save-cache: *save-gradle-cache

  example-61-ios:
    <<: *macos_defaults
    steps:
    - attach_workspace:
        at: ~/toolbar-android
    - run:
        name: Build iOS example app (RN61)
        command: |-
          cd example/ToolbarAndroidExample-061/ios 
          rm -rf Prods
          pod install
          cd ..
          yarn ios
          # react-native run-ios --project-path example/ToolbarAndroidExample-061/ios
# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  version: 2
  Test:
    jobs:
    - linux-checkout
    - eslint:
        requires:
        - linux-checkout
    - flow:
        requires:
        - linux-checkout
    - jest:
        requires:
        - linux-checkout
    - tsc:
        requires:
        - linux-checkout
    - example-61-android-compile:
        requires:
        - linux-checkout
# Disabled until we have macOS containers enabled        
#     - ios-checkout
#     - ios-compile:
#         requires:
#         - ios-checkout